/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type CloseUserVolumeAccumulatorEvent = {
  user: Address;
  timestamp: bigint;
  totalUnclaimedTokens: bigint;
  totalClaimedTokens: bigint;
  currentSolVolume: bigint;
  lastUpdateTimestamp: bigint;
};

export type CloseUserVolumeAccumulatorEventArgs = {
  user: Address;
  timestamp: number | bigint;
  totalUnclaimedTokens: number | bigint;
  totalClaimedTokens: number | bigint;
  currentSolVolume: number | bigint;
  lastUpdateTimestamp: number | bigint;
};

export function getCloseUserVolumeAccumulatorEventEncoder(): FixedSizeEncoder<CloseUserVolumeAccumulatorEventArgs> {
  return getStructEncoder([
    ['user', getAddressEncoder()],
    ['timestamp', getI64Encoder()],
    ['totalUnclaimedTokens', getU64Encoder()],
    ['totalClaimedTokens', getU64Encoder()],
    ['currentSolVolume', getU64Encoder()],
    ['lastUpdateTimestamp', getI64Encoder()],
  ]);
}

export function getCloseUserVolumeAccumulatorEventDecoder(): FixedSizeDecoder<CloseUserVolumeAccumulatorEvent> {
  return getStructDecoder([
    ['user', getAddressDecoder()],
    ['timestamp', getI64Decoder()],
    ['totalUnclaimedTokens', getU64Decoder()],
    ['totalClaimedTokens', getU64Decoder()],
    ['currentSolVolume', getU64Decoder()],
    ['lastUpdateTimestamp', getI64Decoder()],
  ]);
}

export function getCloseUserVolumeAccumulatorEventCodec(): FixedSizeCodec<
  CloseUserVolumeAccumulatorEventArgs,
  CloseUserVolumeAccumulatorEvent
> {
  return combineCodec(
    getCloseUserVolumeAccumulatorEventEncoder(),
    getCloseUserVolumeAccumulatorEventDecoder()
  );
}
