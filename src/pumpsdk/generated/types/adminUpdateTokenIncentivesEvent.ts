/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type AdminUpdateTokenIncentivesEvent = {
  startTime: bigint;
  endTime: bigint;
  dayNumber: bigint;
  tokenSupplyPerDay: bigint;
  mint: Address;
  secondsInADay: bigint;
  timestamp: bigint;
};

export type AdminUpdateTokenIncentivesEventArgs = {
  startTime: number | bigint;
  endTime: number | bigint;
  dayNumber: number | bigint;
  tokenSupplyPerDay: number | bigint;
  mint: Address;
  secondsInADay: number | bigint;
  timestamp: number | bigint;
};

export function getAdminUpdateTokenIncentivesEventEncoder(): FixedSizeEncoder<AdminUpdateTokenIncentivesEventArgs> {
  return getStructEncoder([
    ['startTime', getI64Encoder()],
    ['endTime', getI64Encoder()],
    ['dayNumber', getU64Encoder()],
    ['tokenSupplyPerDay', getU64Encoder()],
    ['mint', getAddressEncoder()],
    ['secondsInADay', getI64Encoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getAdminUpdateTokenIncentivesEventDecoder(): FixedSizeDecoder<AdminUpdateTokenIncentivesEvent> {
  return getStructDecoder([
    ['startTime', getI64Decoder()],
    ['endTime', getI64Decoder()],
    ['dayNumber', getU64Decoder()],
    ['tokenSupplyPerDay', getU64Decoder()],
    ['mint', getAddressDecoder()],
    ['secondsInADay', getI64Decoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getAdminUpdateTokenIncentivesEventCodec(): FixedSizeCodec<
  AdminUpdateTokenIncentivesEventArgs,
  AdminUpdateTokenIncentivesEvent
> {
  return combineCodec(
    getAdminUpdateTokenIncentivesEventEncoder(),
    getAdminUpdateTokenIncentivesEventDecoder()
  );
}
