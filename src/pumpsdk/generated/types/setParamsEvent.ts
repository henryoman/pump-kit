/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type SetParamsEvent = {
  initialVirtualTokenReserves: bigint;
  initialVirtualSolReserves: bigint;
  initialRealTokenReserves: bigint;
  finalRealSolReserves: bigint;
  tokenTotalSupply: bigint;
  feeBasisPoints: bigint;
  withdrawAuthority: Address;
  enableMigrate: boolean;
  poolMigrationFee: bigint;
  creatorFeeBasisPoints: bigint;
  feeRecipients: Array<Address>;
  timestamp: bigint;
  setCreatorAuthority: Address;
  adminSetCreatorAuthority: Address;
};

export type SetParamsEventArgs = {
  initialVirtualTokenReserves: number | bigint;
  initialVirtualSolReserves: number | bigint;
  initialRealTokenReserves: number | bigint;
  finalRealSolReserves: number | bigint;
  tokenTotalSupply: number | bigint;
  feeBasisPoints: number | bigint;
  withdrawAuthority: Address;
  enableMigrate: boolean;
  poolMigrationFee: number | bigint;
  creatorFeeBasisPoints: number | bigint;
  feeRecipients: Array<Address>;
  timestamp: number | bigint;
  setCreatorAuthority: Address;
  adminSetCreatorAuthority: Address;
};

export function getSetParamsEventEncoder(): FixedSizeEncoder<SetParamsEventArgs> {
  return getStructEncoder([
    ['initialVirtualTokenReserves', getU64Encoder()],
    ['initialVirtualSolReserves', getU64Encoder()],
    ['initialRealTokenReserves', getU64Encoder()],
    ['finalRealSolReserves', getU64Encoder()],
    ['tokenTotalSupply', getU64Encoder()],
    ['feeBasisPoints', getU64Encoder()],
    ['withdrawAuthority', getAddressEncoder()],
    ['enableMigrate', getBooleanEncoder()],
    ['poolMigrationFee', getU64Encoder()],
    ['creatorFeeBasisPoints', getU64Encoder()],
    ['feeRecipients', getArrayEncoder(getAddressEncoder(), { size: 8 })],
    ['timestamp', getI64Encoder()],
    ['setCreatorAuthority', getAddressEncoder()],
    ['adminSetCreatorAuthority', getAddressEncoder()],
  ]);
}

export function getSetParamsEventDecoder(): FixedSizeDecoder<SetParamsEvent> {
  return getStructDecoder([
    ['initialVirtualTokenReserves', getU64Decoder()],
    ['initialVirtualSolReserves', getU64Decoder()],
    ['initialRealTokenReserves', getU64Decoder()],
    ['finalRealSolReserves', getU64Decoder()],
    ['tokenTotalSupply', getU64Decoder()],
    ['feeBasisPoints', getU64Decoder()],
    ['withdrawAuthority', getAddressDecoder()],
    ['enableMigrate', getBooleanDecoder()],
    ['poolMigrationFee', getU64Decoder()],
    ['creatorFeeBasisPoints', getU64Decoder()],
    ['feeRecipients', getArrayDecoder(getAddressDecoder(), { size: 8 })],
    ['timestamp', getI64Decoder()],
    ['setCreatorAuthority', getAddressDecoder()],
    ['adminSetCreatorAuthority', getAddressDecoder()],
  ]);
}

export function getSetParamsEventCodec(): FixedSizeCodec<
  SetParamsEventArgs,
  SetParamsEvent
> {
  return combineCodec(getSetParamsEventEncoder(), getSetParamsEventDecoder());
}
